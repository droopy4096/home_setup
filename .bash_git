#!/bin/bash
# Requires: ~/.bash_colors

GIT_CACHE_TTL=${GIT_CACHE_TTL:-2}
whats_my_git(){
  # MYGREEN="\[\033[1;32m\]"
  MYGREEN="\033[1;32m"
  _GIT_DIR=$(git rev-parse --show-toplevel 2> /dev/null )
  unset GIT_NAME
  [ -n "$_GIT_DIR" ] && GIT_NAME=$(basename $_GIT_DIR)
  # [ -n "$GIT_NAME" ] && echo -en "$MYGREEN>${GIT_NAME} "
  if [ -n "$GIT_NAME" ] 
  then
    FILE_MATCHES=$(find $_GIT_DIR/.git/FETCH_HEAD -mmin +${GIT_CACHE_TTL} 2> /dev/null) 
    FIND_EXIT_CODE=$?
    if [ -n "${FIND_MATCHES}" ]
    then
      git fetch -q
    fi

    LBRANCH=$(git rev-parse --abbrev-ref HEAD)
    BRANCHES=$(git branch --list --format='%(refname:lstrip=2)|%(upstream:lstrip=2)' ${LBRANCH} 2>/dev/null)
    if [ -z $? ]
    then
      REMOTE_BRANCH=${BRANCHES##*|}
      LOCAL_BRANCH=${BRANCHES%%|*}
    else
      BRANCHES=$(git branch --list ${LBRANCH} 2>/dev/null | awk '/\*/ { print $2;}')
      LOCAL_BRANCH=${BRANCHES}
      # .git/refs/remotes/origin/HEAD:ref: refs/remotes/origin/master
      # REMOTE_BRANCH=$(sed 's#ref: refs/remotes/##g' ${_GIT_DIR}/.git/refs/remotes/origin/HEAD )
      # REMOTE_BRANCH=$(git rev-parse --abbrev-ref "${LOCAL_BRANCH}@{upstream}")
      REMOTE_BRANCH=$(git rev-parse --abbrev-ref --symbolic-full-name @{u})
    fi
    # LOCAL_BRANCH=$(git branch --format='%(refname:lstrip=2)')
    # REMOTE_BRANCH=$(git branch --format='%(upstream:lstrip=2)')
    LOCAL_CHANGES=$(git status --porcelain | wc -l | awk '{$1=$1};1' )
    # REMOTE_STATUS=$(git status --short --ahead-behind -b --porcelain 2>/dev/null | awk '/(\[.*\])/ {sym=""; if ($3=="[ahead") {sym="+"}; if ($3=="[behind") {sym="-"}; print sym $4}'| sed -e 's/\]//g')
    REMOTE_STATUS=$(git status --short -b --porcelain 2>/dev/null | awk '/(\[.*\])/ {sym=""; if ($3=="[ahead") {sym="+"}; if ($3=="[behind") {sym="-"}; print sym $4}'| sed -e 's/\]//g')
    REMOTE_COLOR=$Dark_Gray
    if [ -n "$REMOTE_STATUS" ]
    then
      case ${REMOTE_STATUS:0:1} in
        '+') REMOTE_COLOR=$Yellow
            ;;
        '-') REMOTE_COLOR=$Light_Red
            ;;
      esac
    fi
    if [ "$LOCAL_CHANGES" -eq 0 ]
    then
      # STATUS="${Green}${CHECK_MARK}${RESET}"
      STATUS=""
      STATUS_COLOR=${Cyan}
    else
      STATUS="${Yellow}+${LOCAL_CHANGES}${RESET}"
      STATUS_COLOR=${Light_Red}
    fi
    PS1_PRE="${Light_Green}${GIT_NAME}${RESET}(${STATUS_COLOR}${LOCAL_BRANCH}${RESET}${STATUS}:${REMOTE_COLOR}${REMOTE_BRANCH}${REMOTE_STATUS}${RESET})"
    PS1="${PS1_PRE} ${BASE_PS1}"
    PS1_SHORT="${PS1_PRE} ${BASE_PS1_SHORT}"
  else
    PS1="${BASE_PS1}"
    PS1_SHORT="${BASE_PS1_SHORT}"
  fi
  export GIT_NAME
}

